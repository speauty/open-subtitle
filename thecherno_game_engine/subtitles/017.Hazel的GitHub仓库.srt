1
00:00:00,133 --> 00:00:03,350
嘿，你们好，我是TheCherno，欢迎回到我的游戏引擎系列教程
hey, what's up guys, my name is TheCherno, welcome back to my game engine series

2
00:00:03,766 --> 00:00:08,333
那么上次我们看了ImGui事件，如果你们还没有看过的话，一定要看看那期视频
so last time we took a look at ImGui events, definitely check out that video, if you haven't already

3
00:00:08,333 --> 00:00:13,666
我们实现了我们想要为ImGui执行的所有事件，以便实际与它交互，并在Hazel中使用它
we implemented all the events that we wanted to do for ImGui, so that we actually interact with it, and use it inside Hazel

4
00:00:13,666 --> 00:00:18,966
现在那些都完成了，这很酷，今天看看这个，我有一个不同的设置
that's all done now, which is pretty cool, and today check this out, I've got a bit of a different set

5
00:00:18,966 --> 00:00:21,825
那是因为我的房子目前正在进行一点翻修
that's because my place is currently getting a little bit of a renovation done

6
00:00:22,266 --> 00:00:26,533
正因为如此，这里到处乱七八糟的东西，我暂时呆在这里
and so because of that, everything's kind of just all over the place, I'm staying here for the time being

7
00:00:26,533 --> 00:00:31,375
正因为如此，我想我会利用这个机会，因为我忙于我们所有的创新工作
and because of that, I thought that I would kind of use this opportunity, since I'm so busy with all of our innovation stuff

8
00:00:31,375 --> 00:00:36,300
我想有些人会说这是一个合适的插曲
and didn't really get a chance to make a proper episode, I guess some people call it a proper episode

9
00:00:36,300 --> 00:00:39,250
今天，我们可以看看github仓库
today we could just kind of take a look at the github repository

10
00:00:40,400 --> 00:00:44,496
那就是Hazel仓库，只是因为我真的还没有花一期在那上面
that is Hazel, and kind of just because I really haven't even spent an episode on that yet

11
00:00:44,496 --> 00:00:48,900
我们过一遍那些，看到了人们提出的所有问题和合并请求
and we kind of go through that and see all of the kind of issues and pull requests that people have made

12
00:00:49,166 --> 00:00:53,500
我将介绍在github上实际要做的很多事情
I'll introduce a lot of the things that will actually be doing on that github

13
00:00:53,500 --> 00:01:02,350
我多么希望你们，我想提交与我合作的Hazel，然后更多，所以我想只需做一些修复
and how I want you guys, I guess to submit to collaborate with me on Hazel, and then more, so just implement some of those fixes I guess

14
00:01:03,100 --> 00:01:06,900
在这期视频中，因为我很久以来一直想那样做
inside this video, because I've been meaning to do that in like for such a long time

15
00:01:06,900 --> 00:01:11,166
我觉得那很完美，因为这不是我花几个小时准备这期的
and I thought this is perfect, because this is not by me spending hours preparing for the episode

16
00:01:11,166 --> 00:01:15,050
我可以随时做这件事，看看我们在github上可以得到什么
I can just kind of just do this on the fly, and see what we have available to us on github

17
00:01:15,800 --> 00:01:21,075
本周正是实现那个的最佳时机，所以让我们来看看github仓库
and this week is just perfect for doing that, so let's just jump in, and take a look at that github repository

18
00:01:21,400 --> 00:01:26,333
看看我们能做些什么，好吧，那么这就是Hazel的github仓库
and see what we can actually do, okay, so this is the github repository for Hazel

19
00:01:26,333 --> 00:01:31,300
如果你们不熟悉那个的话，链接在本系列每一个视频的描述中
if you guys aren't familiar with that, the link is in the description of every single video of this series

20
00:01:31,300 --> 00:01:37,525
也就是github.com/TheCherno/Hazel，我们有一个包含所有代码的github仓库
which is github.com/TheCherno/Hazel, so we have this github repository which contains all the code

21
00:01:37,525 --> 00:01:41,325
现在，我想让那些对git不太熟悉的人了解一下
now I do want to give you guys a bit of a tour to those who aren't as familiar with git

22
00:01:41,575 --> 00:01:46,850
显然，对于很多人来说，这可能是你们的第一个github类型的项目或git项目
obviously for a lot of people, this is probably your first github kind of project or git project

23
00:01:48,166 --> 00:01:51,333
一般来说，这是第一种大型软件项目，我知道有很多视图
just this first kind of big software project in general, I know for a lot of views

24
00:01:51,333 --> 00:01:56,400
那就是为什么我有点想给你们这些了解它有多古老的人做一个概述
that's why I kind of want to give this overview for those of you who understand how old this works of course 

25
00:01:56,400 --> 00:02:01,000
虽然我仍然愿意，但我比不去听这些信息更先进
and are more advanced than feel free to not listen to this information, although I still would

26
00:02:01,000 --> 00:02:01,025
因为你们可能学到了不知道的东西

27
00:02:01,025 --> 00:02:04,000
因为你们可能学到了不知道的东西
because you probably learn things that you might not have known

28
00:02:04,425 --> 00:02:12,600
好了，所以我首先要关注的是commits，所以人们问我，那些没有看到最新更新的朋友
okay, so the first thing I want to focus on is this commits thing, so people ask me, people who watch the series and who aren't up to date

29
00:02:12,933 --> 00:02:16,200
不一定需要下载代码，然后立即查看所有内容
don't necessarily want to just download the code, and take a look at everything immediately

30
00:02:16,200 --> 00:02:21,425
他们可能真的想看看某期的代码是什么样子的，但猜猜你们实际上该怎么做
they actually might want to see what the code was like as of a certain episode, but guess what you can actually do that

31
00:02:22,200 --> 00:02:27,225
如果返回，点击commit，然后看看这个，你们就能看到我所做的所有不同提交
if you go back, if you click on that commits thing, and then look at this, you have all the different commits that I've made

32
00:02:27,600 --> 00:02:35,280
通常我每期提交一次，对吧，例如关于预编译头的那期，这就是那个提交，对吧
and typically I commit once per episode, right, so for example the episode about pregampiled headers, well this is that commit, right

33
00:02:35,600 --> 00:02:43,250
我刚刚添加了一个spdlog之类的东西，可能是premake和生成的项目，那就是commit
the episode where I just added you know a spdlog and all of that kind of stuff, and maybe premake and generated projects, that is discommit

34
00:02:43,700 --> 00:02:50,100
如果点击哈希，我会在一个新选项卡中打开它，你们会看到到底发生了什么变化，所以例如
if you click on this hash here, I'll open it in a new tab, you'll see exactly what's changed, so for example

35
00:02:51,500 --> 00:02:55,799
我认为这主要不是代码更改，但你们可以看到我添加了这个premake文件
I think this is mostly not code changes, but you can see that I added this premake file

36
00:02:55,800 --> 00:03:00,725
这是文件项目中所有的绿色更改，这就是更改的内容，让我们为实际代码找到更好的提交
this is all the green changes in the project of files, this is what changed, let's find a better commit for actual codes 

37
00:03:00,725 --> 00:03:06,325
也许像这样从GLFW调度事件，你们可以在Application.cpp文件中看到
maybe like this dispatching events from GLFW, you can see that in the Application.cpp file

38
00:03:06,325 --> 00:03:08,766
这就是改变的地方，对吧
this is what has changed, right

39
00:03:08,766 --> 00:03:14,875
我添加了所有东西(绿色)，红色是被删除了，酷，对吧，因为你们可以很容易地看到变化
I've added all the green stuff, the red stuff has been removed, very cool, right, because you can easily see the changes

40
00:03:14,875 --> 00:03:20,275
如果你们想像这样实现它，如果你们遵循这个，就像应该做的那样，并且自己输入所有代码
and if you want to implement it in like, if you're following along with this, like you should be, and typing out all the code yourself

41
00:03:20,700 --> 00:03:25,899
那可能是最好的学习方式，可以确切看到发生了什么变化，比如发生了什么，没有成功或其他的
which is probably the best way to learn, you can see exactly what's changed, in case something, didn't work out or whatever

42
00:03:26,250 --> 00:03:31,950
我们只是想看看我到底做了些什么来解决一个问题，你们可以通过看看这个差异来实现那个
we just want to kind of see exactly what I did to actually solve a problem, you can do that by just looking at this diff

43
00:03:32,400 --> 00:03:37,456
所以那真的很有用，但有一点人们不太了解，那就是你们可以点击这个按钮
so that's really really useful, but one thing that people don't know as much is that you can click on this button

44
00:03:37,700 --> 00:03:42,675
它就在它的旁边，在历史记录的这一点上实际浏览该仓库，对吧
which is right next to it to actually browse that repository at this point in history, right

45
00:03:42,675 --> 00:03:50,850
所以那么关于premake，如果单击此处，我将看到那个提交的整个仓库的原貌
so again with the premake one, if I click here, I will see this whole repository as it was, as of that commit

46
00:03:51,350 --> 00:03:58,000
对吧，那真的很酷，因为你们可以下载这个，或者在命令行上使用git
right, so that's really cool, because you can then download this, or if you're actually using git on the command line

47
00:03:58,000 --> 00:04:04,775
例如，在你们的计算机上，实际上可以专门切出此提交，对吧，实际上可以那样做
for example on your computer, you can actually just check out this commit specifically, right, you can actually do that

48
00:04:06,000 --> 00:04:09,400
你们可以看到这就是我想的那个树形，你们实际上可以做到这一点
and you can see that's kind of the tree I guess, you can actually do that

49
00:04:09,400 --> 00:04:13,133
然后重新创建Hazel的版本，真的很酷
and just recreate that version of Hazel, which is really cool

50
00:04:13,133 --> 00:04:17,599
再说一次，如果你们一直跟着学习，想要一些更简单的东西，因为随着时间的推移
again, if you're following along, and you want something a bit more simple, because as time goes on

51
00:04:17,600 --> 00:04:21,225
你们知道，如果大概一年后再看这段视频，Hazel就是这个巨大的引擎
you know, if you're watching this video, and it's like a year from now, and Hazel is this huge engine

52
00:04:21,900 --> 00:04:28,121
你们可能仍然希望从零开始实现基础，而且仍然可以那样做，因为可以浏览历史
you might still want to implement the basics and start from scratch, and you can still do that, because you can go through the history

53
00:04:28,400 --> 00:04:34,300
看看历史记录上任何一个特定提交的情况，真的很酷，所以很多人都不知道
and see what it was like at any given point in history, which is really really cool, so a lot of people don't know that

54
00:04:34,300 --> 00:04:41,799
所以我只是想说清楚，好吧，接下来我想谈的就是这种合作机会，对吧
so I just wanted to kind of make that clear, okay, the next thing I want to talk about is all this kind of collaboration opportunity, right

55
00:04:41,933 --> 00:04:49,133
因为我实际上我确实打算使用这个，我希望Hazel成为我们共同合作的项目
because I have actually I do actually intend on using this, I want Hazel to be a project that we work on together

56
00:04:49,266 --> 00:04:57,875
github促进了许多常见的软件工程过程，我想就团队合作而言
and github facilitates a lot of kind of common software engineering processes I guess as far as teamwork and collaboration goes

57
00:04:58,266 --> 00:05:03,525
所以我们这里基本上有三四个主要的东西，也就是问题，PR，项目和wiki
so we basically have three or four even main things here, we have issues pulled requests projects and the wiki

58
00:05:04,866 --> 00:05:13,893
所以我们将从问题开始，问题本质上就像任何事情，任何任务、问题或其他任何东西
so we'll start with issues, issues are just like essentially anything any tasks or problems or questions or whatever

59
00:05:14,133 --> 00:05:19,766
这里通常会讨论与Hazel开发相关的问题，并在这里提出
that are related to the development of Hazel are usually discussed here, and just raised here

60
00:05:19,766 --> 00:05:22,925
所以如果你们在Hazel中发现一个bug，应该在这里打开一个问题
so if you find a bug in Hazel, you should open an issue here

61
00:05:22,925 --> 00:05:28,075
对吧，随着时间的推移，我会开始添加标签之类的东西
right, as time goes on, I will start adding things like labels

62
00:05:28,266 --> 00:05:33,733
我会定制这个列表，让它对我们更有用，显然我还没有使用这个
and I'll kind of just customize this list to make it a little bit more usable for us, obviously I'm not using this yet

63
00:05:33,733 --> 00:05:39,450
甚至还有里程碑，它们基本上是问题的集合，并为特定的项目发布请求
and there's even milestones, which are these basically collections of issues and pull requests for particular release a project

64
00:05:39,450 --> 00:05:45,975
例如，可能会有类似于渲染器，或者可能有类似于我们正在努力实现的某个版本
so there might be like the renderer, for example, or maybe like a certain release we're working towards

65
00:05:46,733 --> 00:05:52,525
我们基本上可以附加一系列问题，并说当所有这些问题都完成时，这意味着那就这样了
and we can basically attach a bunch of issues to that, and say that when all these issues are complete, that means that that's it

66
00:05:52,725 --> 00:05:57,166
当所有这些问题都解决后，版本就可以发布了，或者渲染器完成了，或者其他什么
when all these issues are closed, the release is ready to go, or the renderer is complete or whatever

67
00:05:57,166 --> 00:06:00,775
这真的很酷，我也打算在将来使用这个东西
which is really cool, and again I intend on using this stuff in the future as well

68
00:06:01,966 --> 00:06:06,133
但我们马上就会讨论这些实际问题，但那基本上就是问题所在
but we'll go through these actual real issues in a minute here, but that's basically what issues are

69
00:06:06,133 --> 00:06:10,575
只是有点，你们知道，我在想这个，或者你们知道我在Hazel发现了一个问题
just little kind of, you know, oh hey, I was wondering about this, or you know I found a problem in Hazel 

70
00:06:10,575 --> 00:06:18,325
我只是想让你们知道，如果点击，如果尝试在ImGui或其他任何地方滚动，它有时没反应
and just wanted to let you know that, if you click you know, if you try and scroll in ImGui or whatever, it doesn't work sometimes

71
00:06:18,566 --> 00:06:23,966
对了，差不多就那样，至于PR就是他们实际写的代码
yeah that kind of stuff, pull requests are code that people have actually written

72
00:06:24,333 --> 00:06:31,450
通常要么实现特性，要么经常修复些小问题，所以举个例子，这就是一个很好的例子
that typically either implement features, or I guess more often fix little things, so for example this is a great example

73
00:06:32,100 --> 00:06:40,866
这个人在premake中添加了作为Sandbox的启动项目，对吧，所以如果我们查看变更
the start project this person has added supper to be Sandbox in premake, okay, so if we look at the files changed

74
00:06:40,866 --> 00:06:43,775
你们可以看到，在premake中，他们在这里添加了这两行代码
you can see that in premake, they've just added these two lines of code here

75
00:06:43,775 --> 00:06:47,200
基本上就是将Sandbox设置为VS的启动项目
that basically set sandbox as a starter project in visual studio

76
00:06:47,533 --> 00:06:52,775
这样我们就不必像你们所知道的那样进入Sandbox，然后右键单击并设置为启动项目
so that we don't have to like you know go to Sandbox, and then right click and set a startup project

77
00:06:53,100 --> 00:06:58,300
因为很多人实际上，我认为Hazel就会变成启动项目或其他什么，人们会尝试运行它
because a lot of people actually, I think Hazel ends up coming up as a startup project or whatever, people try and run that

78
00:06:58,900 --> 00:07:04,450
然后他们得到一个错误，无法停止程序，很明显，正在尝试运行一个dll文件，它只是一个库
and then they get this error which says, unable to stop program, because obviously you're trying to run a dll file, which is just a library

79
00:07:05,050 --> 00:07:10,450
你们需要运行可执行文件，所以那是一个非常好的修复，对吧，非常简单，非常容易
and you need to run the excutable file, so that's like a really great fix, right, really simple, really easy

80
00:07:10,675 --> 00:07:16,333
我不想我当然不想只是想哦是的，这是个好主意，让我自己来集成那个吧
I'm not like I certainly don't intend to just kind of be like oh yeah, this is a good idea, let me just integrate that myself

81
00:07:16,333 --> 00:07:22,775
它是一个完整的请求，显然没有冲突，可以很容易合并，那为什么不合并它呢，对吧
no why it's a full request, it's obviously has no conflicts and can be merged easily, why wouldn't I merge that, right

82
00:07:23,166 --> 00:07:29,850
所以我真的想再次得到你们的帮助，添加项目的Linux支持，像这样的可能会更复杂一些
so I do intend on again getting help from you guys, add Linux support to the project, stuff like this might be a little bit more complicated

83
00:07:31,266 --> 00:07:36,975
你们知道，这个人添加了一堆Makefiles，我可能需要测试，并确保它正常工作，需要时间
you know this person's added a bunch of Makefiles, I would probably need to actually test this, and make sure it works properly, that's a bit of work

84
00:07:36,975 --> 00:07:40,950
所以那可能不是一件微不足道的事情，我们可能需要进一步探索
so that might be something that isn't trivial, and something that we might want to explore more

85
00:07:41,900 --> 00:07:48,333
然后比如为项目添加CMake支持之类的，我想我实际上是在回答那个，我们会用premake
and then you know stuff like added CMake support to project, I think I actually reply to this saying that we would use premake

86
00:07:48,333 --> 00:07:55,400
但我不记得这可能是一个问题，通常对于像这样的大型任务，最好先打开一个问题
but maybe that was in an issue, I don't remember, usually for large tasks like this, it's better to open up an issue first

87
00:07:55,566 --> 00:07:59,875
并且要确保那是我们想要的方向
and to actually just make sure that this is in fact the direction we want to go in

88
00:08:00,300 --> 00:08:06,766
所以我想也许这不是一个原因，我清楚地记得以前在一个premake上评论过，是CMake
so I think maybe it wasn't that one cause, I definitely remember commenting ages ago on a premake, I'm sorry on a CMake

89
00:08:08,533 --> 00:08:13,766
我想我不知道这是否是一个PR，哦，确保你们仔细过了这些
I think I don't know if it was a pull request there, oh, and make sure you obviously look through these ones

90
00:08:13,766 --> 00:08:21,900
我会搜索那些，如果你们知道，如果你们知道，如果想做什么，但你们不确定
I'll search through them, if you if you you know if if you are if there's something that you want to do, but you're not sure about it

91
00:08:21,900 --> 00:08:30,400
我真的没有对此发表评论，我不相信，嗯，我想我没有，嗯，看看这个，我想我评论过的
I really not comment on this, I don't believe that, um I guess I didn't huh look at that, I thought I did

92
00:08:30,500 --> 00:08:37,566
总之，所以你们知道，那是一个好主意，因为我们不需要它，premake实际上可以生成
anyway, um yeah so you know, that's a great idea for example, because we don't need that, premake can actually generate

93
00:08:37,566 --> 00:08:43,675
所以就是Makefiles，不管怎样，就是那样，但不管怎样，PR就是针对这些的，对吧
so you Makefiles, anyway, so that's that, but anyway, pull requests are for that kind of stuff, right

94
00:08:43,675 --> 00:08:49,725
所以如果人们想做一些小任务，甚至是大任务，那么我很乐意看看
so if there's little tasks or just even large tasks that people want to kind of do, then I'm happy to take a look at that

95
00:08:49,975 --> 00:08:54,799
显然，像添加项目的Linux支持之类的东西，可能需要一整期的时间才能完成
obviously stuff like add Linux support of the project, that would require an entire episode probably to go through

96
00:08:54,800 --> 00:08:58,599
所以我不确定那是否合适，请多点耐心
so I'm not sure how that would fit in, please be patient with me regarding this stuff

97
00:08:58,600 --> 00:09:05,925
因为很明显，我有自己的议程和计划，关于我如何写Hazel，如果我突然需要看一下这个
because obviously I have my own kind of agenda and plan, as to how I'm writing Hazel, and if suddenly I need to look over this 

98
00:09:05,925 --> 00:09:12,425
那就需要时间了，我不知道该如何分配这期，无论如何再说一遍，我希望能全职做这个
then that will take time, and I don't know how I'll fit that episode, anyway, again, I wish I was doing this stuff full time

99
00:09:13,100 --> 00:09:16,700
那会让我做这样的事情，但目前情况就是这样
that would let me do stuff like that, but at the moment this is just how it is

100
00:09:17,300 --> 00:09:22,150
项目也很酷，本质上给你们一点训练面板的感觉
projects are really cool as well, gives you like a little bit of a trailer board essentially

101
00:09:22,866 --> 00:09:28,150
为了让你们可以在某些事情上添加问题来规划你们的项目，我不打算编写所有这些特性
so that you can kind of add issues to certain things plan your projects, I'm not going to write all these features

102
00:09:28,266 --> 00:09:32,875
你们可以自己读，但我想这个关键是给你们一堆卡片
you can read that yourself, but the idea is just gives you like a bunch of cards, and I think

103
00:09:33,266 --> 00:09:40,266
这里甚至有一些例子，如果你们能学到更多，基本上会得到这些，对吧，也很酷
there's even some examples maybe if you had learn more, yeah you get basically something like this, right, which again it's really cool

104
00:09:40,266 --> 00:09:44,766
我打算充分利用这一点，对吧，现在我们只是在做基础工作，所以没有太大必要做这些
I intend on fully using this, right, now we're just doing the basics, so I don't think there's a huge need to do this

105
00:09:44,766 --> 00:09:49,125
我可能会在线下下完成大部分工作，我不知道，让我知道你们的想法
and I'll probably end up doing most of this stuff offline, I don't know, let me know what you think about that

106
00:09:49,400 --> 00:09:54,733
让我知道我是否应该在视频中展示我是如何做这些的，或者是否可以线下完成这一切
let me know if I should show how I make all of this in a video, or if it's something that I can just do kind of offline

107
00:09:54,733 --> 00:09:59,333
你们知道，当我在火车上或其他什么的时候，因为那取决于你们
you know, while I'm on the train or something, because again that's up to you guys

108
00:09:59,333 --> 00:10:02,600
如果想看的话，我很乐意在你们面前的视频中这样做
I'm happy to do it in a video in front of you, if you want to kind of see this

109
00:10:02,600 --> 00:10:07,000
你们想看到我把这一切都说清楚，就像你们知道我在想什么一样
and you want to see me kind of talk through all of this stuff, and like you know what I'm thinking about

110
00:10:07,366 --> 00:10:14,600
关于某些问题和任务，以及我如何优先处理这些东西，wiki现在又没用了，因为Hazel
certain issues and tasks, and how I prioritize that kind of stuff, the wikim again useless right now because Hazel's like

111
00:10:14,600 --> 00:10:19,599
哦，我的意思是可能没有用，因为这里可能会有README文档
oh I mean maybe not useless because maybe there could be like a bit of a more extended README here

112
00:10:19,600 --> 00:10:26,166
关于如何实际设置Hazel并构建，因为如果查看discord，如果查看discord服务，就会知道
as to how to actually set up Hazel and build it, because again you know if you look at the discord, if you look at my discord server

113
00:10:26,166 --> 00:10:31,600
你们知道有那么多人不能运行Hazel或与之相关的问题
there's so many people you know not being able to kind of run Hazel or having issues with Hazel

114
00:10:31,700 --> 00:10:37,250
这又是一个琐碎的修复，因为就像我见过至少五次的一个非常普通的修复一样
which again out trivial fixes, because like a really a common one I've seen at least five times is again

115
00:10:37,250 --> 00:10:42,825
因为这是一个启动项目，人们只是不知道，需要将其设置为Sandbox，希望它再次得到修复
because this is the startup project, and people just don't know, that you need to set it to Sandbox, which again hopefully will be fixed

116
00:10:43,500 --> 00:10:48,425
因为那个PR，但你们明白了重点，所以这可能是Hazel
because of that pull request, but you get the point, so that might be something that the Hazel

117
00:10:48,425 --> 00:10:56,475
wiki可能很有用，这也是你们知道的，我的意思是现在可以创建第一个页面，然后保存
wiki might be useful, again something that you know, I mean crank can create the first page now, and just save it

118
00:10:57,133 --> 00:11:02,375
但那只是创建Wiki，你们可以看到现在突然之间，wiki就像刚刚挂起
but that will kind of just make the wiki, and you can see now it's suddenly like the wiki is just up

119
00:11:02,533 --> 00:11:09,366
所以任何人都可以编辑这个，都可以添加页面，我很确定，所以请随时关注下面的内容
so anyone can edit this, anyone can add pages, I'm pretty sure, so feel free to kind of you know right down stuff there

120
00:11:09,366 --> 00:11:13,075
很明显，我必须缓和一下，我也有一群主持人，他们会帮我的
I'll obviously have to moderate it, and I've got a bush of moderators as well, he'll help me out with that

121
00:11:13,350 --> 00:11:17,900
但是是的，我也计划在这里有很多信息
but yeah I plan on obviously having a lot of kind of information here as well

122
00:11:18,325 --> 00:11:22,475
那就是github为我们提供的所有内容的概述
so that's an overview of all the kind of stuff that github has for us

123
00:11:22,666 --> 00:11:29,625
现在让我们来看看这些，看看我们是否可以在Hazel中实现它们，并修复它们
so now let's kind of just go through these, and see if we can actually implement them into Hazel, and fix them up

124
00:11:29,625 --> 00:11:35,577
所以这个MacOS-X支持，这些是问题而不是PR
so Mac OS X support, these are the issues not the pull requests

125
00:11:36,450 --> 00:11:39,866
让我们快速过一下，如何在XCode或Mac中使用代码呢
let's just quickly read this, so how can I use the code in XCode or Mac

126
00:11:39,866 --> 00:11:45,925
当然，如果有办法的话，那么是的，现在我相信premake xcode4应该可以运行，
if there's a way of course, so yeah again premake xcode4 should work, now I believe that

127
00:11:46,400 --> 00:11:54,666
我可能在这里做了些特定的东西，只支持Windows，如果看看EntryPoint，就在这里
I probably have made specific things here that are Windows only, I think if you look at EntryPoint, which is here

128
00:11:55,133 --> 00:11:59,533
是的，就是ifdef HZ_PLATFORM_WINDOWS，因为我还没有在Mac上测试过这个东西
yeah currently it's got ifdef HZ_PLATFORM_WINDOWS, because I haven't tested this stuff on Mac

129
00:11:59,600 --> 00:12:06,166
所以我不知道它是否能在Mac上运行，我确实计划在其他操作系统上进行实际测试
so I don't know if it will work on Mac, I do plan on doing an actual pass on other operating systems

130
00:12:06,166 --> 00:12:11,366
很可能Linux可能是第一个，因为Mac有Mac选项需要Mac硬件
very spoon probably Linux maybe first, because Mac having a Mac option requires Mac hardware

131
00:12:11,366 --> 00:12:17,866
如果排除hack和dodge，我确实有一台Macbook，但我想应该是2013年的，所以它有点旧了
if we exclude hack and dodge and I do have a Macbook, but it's like I think from 2013, so it's a little bit old

132
00:12:18,466 --> 00:12:23,399
但我们拭目以待，我可能会尽快为你们做这些，一旦我做到了那一点
but we'll see, I might just quickly try and do that for you guys anyway, and once I've done that

133
00:12:23,400 --> 00:12:27,525
那就是我通常喜欢添加这样的东西的时候，例如，当我现在在VS中开发时
that's when I usually like to add stuff like that, like for example, when I'm writing in visual studio right now

134
00:12:27,866 --> 00:12:35,333
我真的不喜欢定义elseif HZ_PLATFORM_MACOS之类的事情，因为我无法测试那个
I don't really like to do stuff like you know elseif HZ_PLATFORM_MACOS or something like that, just because I can't test that code anyway

135
00:12:35,333 --> 00:12:42,975
我不想只写代码，所以如果你们看这段实际的代码，里面没有特定于Windows的东西
and I don't want to just write code, so if you look at this actual code, there's nothing really you know Windows specific in it

136
00:12:43,075 --> 00:12:49,075
所以如果你们去掉这个ifdef或者只是添加一些你们知道的或者Mac的东西，对吧
so if you take away this this ifdef or just add something like you know or Mac, right

137
00:12:49,075 --> 00:13:00,133
如果ifdef HZ_PLATFORM_WINDOWS或MAC，那么它应该可以运行，但还没有进行测试
if defined HZ_PLATFORM_WINDOWS or you know mac, then it should actually work, but again I haven't tested that

138
00:13:00,133 --> 00:13:03,933
那就好像不同的操作系统将是我在正确版本中要做的事情
and that's something like different operating systems will be something I would do in the proper version

139
00:13:03,933 --> 00:13:10,999
同样，可能是用宏来做类似的事情，因为最终我们可能希望在这里有特定的Windows内容
again would be probably to do something like that with a macro, because eventually we may want to have specific windows stuff here

140
00:13:11,000 --> 00:13:15,900
例如，我们可能希望实际使用WinMain函数，而不仅仅是main函数
for example we may want to actually have the WinMain function instead of just main

141
00:13:16,466 --> 00:13:24,825
因为可能想与实际的Windows生态进行特殊的更紧密的集成，所以那就是我的想法
because we may want to do some special kind of some more closer integration with the actual windows ecosystem so that those are kind of my thoughts there

142
00:13:26,766 --> 00:13:29,200
然后很明显，实际上我想这是行不通的
and then obviously actually I guess it won't work

143
00:13:29,200 --> 00:13:33,699
虽然一般来说，因为HAZEL_API，现在如果我们通过，这个Core.h
though in general because HAZEL_API, right, now if we go through, what is this Core.h

144
00:13:34,700 --> 00:13:39,675
这个目前只支持Windows，并且我们有__declspec(dllexport)，而不是相应的属性
this only supports windows right now, and we have __declspec(dllexport) instead of the appropriate attributes

145
00:13:39,675 --> 00:13:46,133
对于MacOS类XCode-clang编译器的clang，它本质上就像是一个特殊版本的clang
or whatever for clang for the macos kind of xcode clang compiler, it's like a special version of clang essentially

146
00:13:46,133 --> 00:13:50,149
但它大部分是clang，大部分只是clang，所以基本上对于clang
but it's mostly clang, it's mostly just clang, so basically for clang

147
00:13:50,425 --> 00:13:54,933
我们需要本质上不同的编译器，而不仅仅是__declspec
we need different compiler intrinsically, and not just __declspec

148
00:13:54,933 --> 00:14:01,199
所以再一次需要做一些事情，一些可能很快就会做的事情，但只是现在
so again something that needs to be done, and something that will be probably done quite soon, but again just for now

149
00:14:01,200 --> 00:14:08,200
我只想建立一个基本的框架，然后从那里开始，我将把它扩展到Mac和Linux
I just want to set up a base kind of framework, and then from there, I'll extend it to cover mac as well and linux

150
00:14:08,200 --> 00:14:18,366
因为就目前而言，正如我所提到的，Hazel第一步就只是支持Windows
because for now as I've kind of mentioned Hazel is going to be kind of windows only for the first like milestone maybe

151
00:14:18,366 --> 00:14:24,066
我可以在这里记录里程碑，但在第一段时间里，Hazel只支持Windows
and again milestones is something I could document probably here, but for the first little while Hazel's gonna be windows only

152
00:14:24,066 --> 00:14:30,190
因为最好只关注在一个平台上运行一堆东西，而不是在其他平台上浪费时间
because it's better to just focus on one platform, and get a bunch of stuff running rather than waste time on a lot of other platforms

153
00:14:31,500 --> 00:14:37,266
然后一事无成，因为这又是一个视频系列，我需要保持娱乐性，需要让项目继续下去
and then just get nowhere, because again this is a video series, I need to keep this entertaining, and I need to keep this project going

154
00:14:37,400 --> 00:14:43,999
而且我没有太多的时间开始，所以让大多数人真正快乐会更好
and I don't have much time to begin with, so it's a lot better to just actually have most people happy

155
00:14:44,000 --> 00:14:49,333
因为大多数人都在使用Windows，而使用MacOS的人如果真的想添加，就去加吧
because most people are using Windows, and then people who are using MacOS can just add themselves if they really want to

156
00:14:49,333 --> 00:14:53,966
那是我对这个问题的看法，可能会评论，不想在这个视频中这样做，只是不想浪费时间
anyway that's my opinion on that issue, I might write a comment, I don't want to do it in this video, just not to waste time

157
00:14:53,966 --> 00:15:00,275
但那就是为什么，是了，那么为什么核心客户端日志必须是共享指针而不是唯一指针呢
but that's how, that's what that is like, yes, so why do core client log have to be shared pointer instead of unique pointers

158
00:15:00,375 --> 00:15:10,600
我的意思是，如果查看Log.h，它会返回一个共享指针，这个s_Core是一个共享指针
yeah I mean because that returns a shared pointer on, if we look at Log.h, you can see that this s_Core is a shared pointer

159
00:15:10,600 --> 00:15:16,166
所以我们返回这个，通过引用返回它，因为我们不需要在引用它的地方增加引用计数，对吧
so we return this, we return it by reference, because we don't need to increment the reference count where it is referencing it, right

160
00:15:16,166 --> 00:15:22,966
我们实际上没有转移所有权，也没有获得s_CoreLogger所有权，始终希望所有权由Log持有
we don't, we're not actually transferring ownership, or getting ownership of this s_CoreLogger, I always want the ownership to be are held by log

161
00:15:22,966 --> 00:15:26,925
不管怎样，它是静态的，所以它将是这个实际模块的生命周期
and it's static, anyway, so it will be the lifetime of this actual module

162
00:15:28,066 --> 00:15:37,533
但我想要的就是访问它，因此是通过引用返回的东西，可以只在一个范围内通过值返回
but yeah that all I want is access to it hence the return by reference thing, I you could return by value and just have it in a scope

163
00:15:37,533 --> 00:15:44,700
我个人不喜欢这样做，通常我会使用其他形式的引用计数，比如侵入式引用计数
I personally don't like doing that, usually I use other forms of reference counting like in like intrusive ref counts

164
00:15:45,366 --> 00:15:46,725
那实际上是对象的一部分
that are actually part of the object

165
00:15:46,975 --> 00:15:51,375
所以在这种情况下，通常我通过引用返回，当我不希望引用计数增加时
so in that case usually I do return by reference, when I don't want that ref count to increment

166
00:15:52,500 --> 00:15:57,566
因为为什么要复制这个，这里根本没有所有权，我只是个笨蛋
because why make a copy of this, there's no ownership going on here at all, I'm simply retard

167
00:15:57,766 --> 00:16:02,275
我只是想要只读的访问权限，没有任何所有权转移
I simply want access read only kind of access to this, no ownership transfer at all

168
00:16:03,425 --> 00:16:11,700
嗯，我会喜欢这个评论，我可能会关闭这个问题，因为那就是答案，好了
um so I will like this comment, and I can probably close this issue, because that's the answer right there okay

169
00:16:13,500 --> 00:16:17,084
因此，我第一次构建时构建失败，是的，这是我见过的一个相当大的问题
so I built fails when building for the first time, yeah this is quite an issue I've seen

170
00:16:18,075 --> 00:16:21,666
在这期premake视频中，基本上发生的是
and in this premake video basically what happens is

171
00:16:21,666 --> 00:16:29,225
我可以向你们展示的是，如果尝试构建，什么是构建的Sandbox，它最终会失败
and I can demonstrate this to you guys is if you try and build, you know, what's built Sandbox it actually ends up failing

172
00:16:29,550 --> 00:16:39,825
因为它不能复制某个文件，所以让我们看看这个，好吧，成功了，因为我们只需要清理这个
because it can't copy a certain file, so let's look at this, okay that's succeeded, that's because let's just clean this

173
00:16:40,366 --> 00:16:48,600
我需要删除bin和bin-int，再试一次，好了，你们可以看到失败了，一个失败了
and also I want to maybe delete bin and bin-int to delete those directories, let's try again, okay, so you can see that failed, one failed

174
00:16:48,600 --> 00:16:57,425
没有失败，如果我们向上滚动一点，你们可以看到它在这里说，这个命令没用
and there isn't failed, if we scroll up a little bit, you can see it says over here that, that command kind of didn't work

175
00:16:57,425 --> 00:17:05,933
看看这里，那里，那里有错误，所以if-exist-boulevard命令失败了，解决方法是
so quite look for that here, there it is, there's that error, so the command if exist boulevard failed, and the solution to that

176
00:17:05,933 --> 00:17:14,825
我猜只是再次运行它，原因是它试图在创建这些特定文件夹之前实际运行该代码
I guess is just running it again, the reason is that it tries to actually run that code before these certain folders have been created

177
00:17:15,700 --> 00:17:24,850
那就是后置构建实际上做的，如果我们查看premake文件，当它尝试复制时，它尝试复制
and what that post built step actually does, if we look at the premake file, as it tries to copy, it tries to copy

178
00:17:25,566 --> 00:17:33,225
这是在Hazel项目中，我想它试图将输出复制到Sandbox中
and this is inside the Hazel project, it tries to actually copy the output I guess into Sandbox

179
00:17:33,225 --> 00:17:38,450
现在问题是Sandbox还没有创建，因为我们还没有编译Sandbox，我们已经编译了Hazel
now the thing is Sandbox hasn't been created yet, because we haven't compiled Sandbox, we've compiled Hazel

180
00:17:38,733 --> 00:17:45,333
这是个Hazel的后置构建命令，现在是这样，为什么这是一个关于Hazel的后置构建命令
and this is a post build command on Hazel, now here's the thing, the reason why this is a post build command on Hazel

181
00:17:45,333 --> 00:17:51,525
因为此人说从Hazel中删除Windows过滤器上的后置构建命令，并将其放入Sandbox项目中
because this person says remove the post build command on the windows filter from Hazel, and put it into the Sandbox project

182
00:17:52,000 --> 00:17:56,900
那就是我通常会做的，现在我没有为Hazel这样改变的原因是因为
that's what I actually usually ended up doing, now the reason I didn't do that for Hazel is because 

183
00:17:56,900 --> 00:18:04,375
 如果你们这样做了，你们会改变为实际的Hazel，而不是Sandbox
if you do that and you make a change to actual Hazel, and not to Sandbox

184
00:18:04,375 --> 00:18:13,575
然后它实际上不会复制最新文件，因为没有构建正确的Sandbox，你们没有更改Sandbox
then it won't actually copy the latest file, because it doesn't build right Sandbox, you haven't changed Sandbox

185
00:18:13,800 --> 00:18:16,875
因此，Sandbox本身并没有构建，它已经准备就绪
therefore Sandbox itself doesn't build, it's already ready to go

186
00:18:17,100 --> 00:18:20,175
你们已经更改了Hazel，因为它是一个动态库
you've changed Hazel, and because it's a dynamic library

187
00:18:21,150 --> 00:18:26,325
在某些情况下，我的意思是，如果整个库文件都发生了更改，而且很明显它会发生更改
under certain cases, I mean if the whole library file has a change and has to really obviously it will

188
00:18:26,575 --> 00:18:30,100
但在某些情况下，它实际上不会复制它，对吧
but under certain cases, it won't actually copy it right

189
00:18:30,566 --> 00:18:39,766
这就是为什么，就像我的方法一样，基本上就是说每次Hazel改变时，我们都需要复制dll
which is why, like my approach to this was just basically to say that obviously every time Hazel changes, that's when we need to copy that dll over

190
00:18:40,600 --> 00:18:41,875
所以我们得到了它的最新版本
so that we get the latest version of it

191
00:18:42,250 --> 00:18:46,500
在这种情况下Sandbox目录是不存在的，所以除非有人有更好的解决方案
now again in this case Sandbox fold doesn't exist, so unless someone has a better solution to this

192
00:18:46,500 --> 00:18:48,799
因为我也不喜欢这样，我宁愿直接运行
because I don't like this either, I would rather just work

193
00:18:49,133 --> 00:18:53,599
如果文件夹不存在，也许我们可以使用后置构建命令来创建该文件夹，或者可能是复制
maybe we can put a post build command to actually make that folder if it doesn't exist, or maybe this copy thing

194
00:18:53,733 --> 00:18:59,899
老实说，这个复制函数应该只生成目录，如果它们还不存在，也许我们可以添加一个标志
I mean honestly this copy function should just make directories, if they don't already exist, maybe there's a flag we can add to that

195
00:18:59,900 --> 00:19:10,199
我可能会在我自己的时间里再次探索，但那就是为什么会这样，所以是的，好吧，这很酷
I might explore that again just in my own time, but that's kind of why this is the way that it is, so yeah okay, this is cool

196
00:19:10,200 --> 00:19:13,933
我读了这个，我喜欢今天早上我真的喜欢这个吗不，我不喜欢，我现在就喜欢
I read this, I like this morning did I actually like this no I didn't, I'm gonna like it now

197
00:19:14,933 --> 00:19:21,475
premake确实有类似静态或动态运行时的函数，所以staticruntime on
premake does have functions for like static or dynamic runtime, so staticruntime on

198
00:19:21,866 --> 00:19:27,875
还有一个我认为是runtime，要么调试，要么不调试
and then there's also I think runtime, which again either debug or not

199
00:19:28,075 --> 00:19:33,175
好吧，以runtime版本为例，这是一个非静态链接
okay, so runtime release for example, and this does a non static link

200
00:19:33,566 --> 00:19:38,665
所以这太棒了，因为我们做了一些很烦人的事情
so this is great, because we did some stuff like this which was really annoying

201
00:19:39,200 --> 00:19:47,566
因为这是MDd链接，然而实际上如果我们看看
because this was a Multi-threaded Debug DLL link of the runtime library, however if we actually look at

202
00:19:49,300 --> 00:19:55,525
我总是忘记它在哪里，我认为它是在Lanuage中，不，不是，那么在代码生成中
and I always forget where this is, I think it's in language, no it's not, so it's easy for us Code Generation

203
00:19:56,133 --> 00:20:03,100
你们可以在这里看到MTd，没有dll，对吧，只有MTd，但是如果转到命令行，就有另一个
you can see Multi-threaded Debug no dll here, right, just MTD, but if we go to the command line, we have another right for it

204
00:20:03,500 --> 00:20:09,650
这真的很烦人，因为它必须，让我在这里做一些更改，以便我们可以重新编译它
which again really annoying, because it has to, let me just kind of make a change here, so that we can recompile it

205
00:20:10,566 --> 00:20:16,800
你们可以看到这里写着命令行警告，它覆盖了我们的MDd
you can see over here that it says command line warning, it's overriding our multi threaded dll

206
00:20:16,909 --> 00:20:22,450
对不起，我是用MDd覆盖了MTd，显然我不喜欢这样
sorry, I'm Multi-Threaded Debug with Multi-Threaded Debug dll, I don't like that obviously

207
00:20:22,966 --> 00:20:30,933
因此，我们用什么来代替这个构建选项，我现在要删除这个标志，是在调试中，而不是MDd
so what we can do instead of having this build options flag, which I'm going to remove now is in debug instead of having MDd

208
00:20:31,866 --> 00:20:41,225
我们可以做运行时调试，所以就是runtime: Debug，我不知道，我想做调试，好了
we can just do runtime debug, so runtime debug and I don't know if, yeah I guess let's do debug, okay

209
00:20:41,600 --> 00:20:45,225
然后，很明显变成了runtime Release，至于staticruntime
and then for this, obviously it becomes runtime Release, now staticruntime

210
00:20:46,500 --> 00:20:49,825
如果想要非dll，staticruntime就是我们要使用的
staticruntime is what we would use if we wanted a non dll

211
00:20:49,825 --> 00:20:56,766
所以我们选择MTd，而不是MDd，这正是我们想要的，所以那就是我们所要做的
so just Multi-Threaded Debug as our option instead of Multi-Threaded dll, which is what we want, so that's all we have to do

212
00:20:56,766 --> 00:21:01,325
那比MD好得多，也不一定是特定于Windows的，目前是这样
and that's way better than MD and doesn't have to be Windows specific either it is for now

213
00:21:01,600 --> 00:21:05,250
但也不一定是这样，因为这应该适用于所有类型的系统
but it doesn't have to be, because that should work for all kind of systems

214
00:21:05,733 --> 00:21:11,175
就那样，那真的很酷，谢谢大家让我注意到这一点，我没有完全意识到这一点
so that's that, and that's really cool, so thank you for people who brought that to my attention, I was not fully aware of that

215
00:21:11,675 --> 00:21:20,394
所以runtime Release和runtime Debug，我想就是这样，所以m的东西不应该再存在了
so runtime release and runtime debug, and I think that's it, so the m stuff shouldn't exist anymore

216
00:21:20,666 --> 00:21:33,300
所以现在，如果我们重新生成项目，重新加载这些，我们应该能够看到Hazel，看到这是
so now if we actually rerun that generate projects, and we reload all of this stuff, we should be able to pop into see Hazel and see that this is

217
00:21:33,533 --> 00:21:38,733
因此，这仍然是MTd，而不是MDd，因为我认为我们还需要静态运行时
so this still has Multi-Threaded Debug, and not debug dll, because I think we also need static runtime

218
00:21:38,733 --> 00:21:47,466
runtime是Debug和Release，staticruntime是on或off，将其设置为dll或非dll，所以必是on
our runtime is just which one Debug Release and staticruntime on or off, you can see sets this to dll or not dll, so but a folder must be on

219
00:21:47,466 --> 00:21:51,750
所以我们还需要staticruntime，我认为staticruntime基本上是你们启用的
so we also need staticruntime, I thought staticruntime was basically something that you enabled

220
00:21:52,800 --> 00:21:58,650
如果你们想要一个静态的，但显然不是，那么让我重新加载你们刚刚启用的premake
let me reload premake something that you just enabled for, if you want a static, but apparently not

221
00:21:58,866 --> 00:22:09,766
所以，实际上可以在这里这样做，所以就是statictruntime off，对Hazel和Sandbox都这样
so um, and we can actually just do this up here, so staticruntime off, okay, and we'll do that for both Hazel and Sandbox

222
00:22:09,766 --> 00:22:19,366
现在，如果我们重新生成项目，看看这个，那么实际上我启用了一个staticruntime
so now if we rerun our generate projects, and we look at this, so I actually have an override process staticruntime on

223
00:22:19,366 --> 00:22:23,766
让我们删了它，这变得很烦人，所以staticruntime off，是我们想要的
let's get rid of that, this is becoming annoying, so staticruntime off is what we want

224
00:22:23,766 --> 00:22:32,566
我不知道为什么要打开，所以Hazel和Sandbox的staticruntime都关了，好了，现在生成项目
I don't know why I had that on, so static runtime off for both Hazel and Sandbox, okay, now let's generate our projects

225
00:22:32,566 --> 00:22:39,425
好了，成功了，重新加载了所有内容，然后在Hazel，现在我们有了MDd
there you go, succeeded, and reload all, and then inside Hazel, now we have Multi-threaded Debug DLL

226
00:22:39,550 --> 00:22:44,425
很好，我们不需要任何重写，所以现在让我们构建所有内容，希望这一切都能正常运行
perfect, and we don't need any overrides, so let's build everything now, and hopefully this will all work

227
00:22:44,900 --> 00:22:51,466
好了，酷，你们可以看到它成功了，很明显我们没有任何覆盖或类似的，漂亮，就是那样
okay, cool, you can see that it succeeded, and obviously we don't have any kind of overrides or anything like that, brilliant, so that is that

228
00:22:53,766 --> 00:23:04,925
谢谢你让我知道，这已经在最新的视频中实现了，我甚至会做一个小小的笑脸微笑
thank you letting me know, this has been implemented this in the latest video, and I'll even do a little smiley face smile

229
00:23:08,600 --> 00:23:13,624
好了，太棒了，所以我喜欢那样的东西，HZ_ENABLED_ASSETS永远不会启用
okay, brilliant, so I love stuff like that, HZ_ENABLED_ASSETS never enabled

230
00:23:13,900 --> 00:23:21,299
是的，我知道，我也在discord上讨论过这个，所以这就是HZ_ENABLED_ASSETS
yeah I know, I discuss this on this chord as well, so this is something that again HZ_ENABLED_ASSETS

231
00:23:21,300 --> 00:23:28,466
如果我们看看Core.h，所以你们可以举例说明它的用法，我们在宏后面启用了同级的断言
if we look at Core.h, so you guys get an example of where it's used, we have enable asserts our brothers behind a macro

232
00:23:28,466 --> 00:23:35,000
无论如何，实际上并没有定义，这意味着当前断言被禁用，所以可以将其添加到premake中
this isn't actually defined, anyway, which means currently asserts are disabled, so what we could do is add it into the premake file of course

233
00:23:35,000 --> 00:23:42,600
因此，如果我们查看premake文件，我们有自己的定义，我们可以很容易地将其添加到其中
so if we look at the premake file, we have our defines, we could just easily just add that in there

234
00:23:42,600 --> 00:23:47,575
我不想在那里定义它，我们可以在那里进行某种调试，但我宁愿定义它并进行编码
I don't want to define it there though, we could have it there for kind of debug, but I'd rather define it and encode

235
00:23:47,966 --> 00:23:56,533
所以我要做的是在Core.h，如果没有定义HZ_ENABLED_ASSETS，或者更确切地说
so what I'm going to do is inside Core.h, I'm going to see that if not defienedHZ_ENABLED_ASSETS or rather you know what

236
00:23:56,666 --> 00:24:04,275
让我们这样做，如果定义了HZ_DEBUG，那么我将定义HZ_ENABLED_ASSETS
let's do it this way, if HZ_DEBUG is defined, then I'm going to define HZ_ENABLED_ASSETS

237
00:24:04,600 --> 00:24:09,533
从技术上讲，我不希望这是一个ifdef，我希望它是一个if
now technically speaking, I don't want this to be an ifdef, I want it to be an if

238
00:24:09,933 --> 00:24:19,099
好了，那样的话，如果HZ_ENABLED_ASSETS实际上设置为1或类似值，那么我实际上可以
okay, that way right, if h that enable asserts is actually set to like one or something like that, then I can actually

239
00:24:20,366 --> 00:24:28,099
如果我们再次查看premake，如果它已经设置好了，那么实际上可以强制地在构建脚本集中
if we look at the premake while again, if it's been set at all, right, then you can actually forcibly in the build script set

240
00:24:28,100 --> 00:24:36,899
你们知道，这是零，对，或是false，对吧，通常不是零，这意味着这实际上已经被定义了
you know, this to zero, right, or to false or something like that, right, doesn't that usually zero, what that means is that this has in fact been defined

241
00:24:37,300 --> 00:24:41,399
对吧，但它被定义为零，这意味着它仍然处于关闭状态
right, but it's been defined to zero, which means this still is off

242
00:24:41,866 --> 00:24:47,750
对吧，但如果你们还没有定义它，那么这就是此代码的作用所在，默认情况下会将其打开
right, but if you haven't defined it at all, that's where this code takes over, and by default turns it on

243
00:24:48,300 --> 00:24:53,700
所以这是我将来想做的事，好吧，但我想专门为其他事情做这件事，在单独的一期里
so that's something that I wanna do in the future, okay, but I want to do that specifically for other things and in a separate episode

244
00:24:53,967 --> 00:24:59,400
所以现在，如果定义了HZ_DEBUG，我们总是启用断言
so for now this is just becoming, if HZ_DEBUG is defined we always turn asserts on

245
00:24:59,400 --> 00:25:04,850
现在已经启用了断言，所以我可能在关闭它之前对我在那里所说的进行了更多的讨论
and so now asserts have been enabled, so I probably discussed a little bit more with what I said there before I close it

246
00:25:05,750 --> 00:25:09,183
好了，所以那就是PR，我们没有做到，我们下次再谈
okay, so that's that pull request, we didn't get to, we'll get to that next time

247
00:25:09,600 --> 00:25:14,850
但希望这是对github的一个很好的概述，以及我们如何在Hazel上进行协作
but hopefully, this was a really good overview of kind of github, and how we can kind of collaborate on Hazel together

248
00:25:15,025 --> 00:25:18,399
好的，我希望你们喜欢那个视频，如果你们喜欢的话，你们可以按那个按钮
okay, so I hope you guys enjoyed that video, if you did, you can hit that like button

249
00:25:18,400 --> 00:25:21,766
你们可以通过访问patreon.com/thecherno来帮助支持该系列
you can help support the series by going over to patreon.com/thecherno

250
00:25:21,966 --> 00:25:25,399
非常感谢所有帮助支持该系列的人，没有你们，Hazel不会在这里
huge thank you to everyone who helps support the series, Hazel wouldn't be here without you guys

251
00:25:25,400 --> 00:25:31,766
我向你们保证，非常感谢你们，如果你们能帮助支持这个系列，我们会提前一周播出
I promise you that, so thank you so much, if you just help support that series, we'll get episodes about a week early

252
00:25:31,800 --> 00:25:36,533
还有一个私人开发分支，我已经在那里开发了很多东西
as well as also access to a private development branch in which I've already got a lot of the stuff developed

253
00:25:36,533 --> 00:25:43,766
这就是我在业余时间喜欢做的事情，下次我想我们会继续前进，我会喜欢的
and that's kind of the one that I just go along with and do stuff in my spare time, next time I think we're gonna just move on I would love

254
00:25:43,766 --> 00:25:50,266
也许下次我会处理PR，我不知道，我真的很想看看你们对这期的反馈
maybe I'll do pull requests next time, I don't know, I'm really interested to see your feedback for this episode

255
00:25:50,266 --> 00:25:55,200
你们喜欢这期吗？这是我们必须做的每一件事，时不时地只是一种维护
did you guys like this kind of episode, it's something that we just have to do every, now and then just kind of a maintenance episode 

256
00:25:55,200 --> 00:26:01,166
因为很明显，我们最终确实建立了一点技术数据，而且我想花时间与你们合作
because obviously we do end up kind of building up a little bit of tech dat, and also I want to spend time collaborating with you guys

257
00:26:01,166 --> 00:26:06,900
希望这能让你们感觉更多地参与到Hazel中，所以如果你们真的想尝试编写特性
hopefully this makes you feel more involved in Hazel, so if for example you do want to have a go at writing features

258
00:26:06,900 --> 00:26:11,866
那太好了，我相信你们中的很多人可能不会以我想要的方式来写
that would be great, I'm sure that a lot of you will probably not end up writing it the way that I wanna write it

259
00:26:11,866 --> 00:26:16,350
因为很明显我也在尝试教学，所以我最终可能会以我自己的方式来写
and because obviously I'm kind of trying to teach as well, I'll probably end up writing it my way kind of anyway

260
00:26:16,600 --> 00:26:24,266
但我会很乐意在这些实际视频中回顾你们的东西，并谈谈设计
but I will I'm happy to review your stuff on these actual videos, and talk about why you know we can talk about design

261
00:26:24,266 --> 00:26:29,699
你们可以以问题或请求的形式提交代码，我可以查看，我可以
you guys can submit code in the form of issues or pull requests or whatever, and I can look at it, and I can

262
00:26:29,700 --> 00:26:35,675
我们可以谈谈为什么你们知道我可能不会这样做，或者你们会给我一些好主意，对吧
we can kind of just talk about why you know I might not do it this way, or maybe you guys will give me great ideas, right

263
00:26:35,933 --> 00:26:40,200
这就是我想在这里鼓励的，这种合作精神
so that's what I want to kind of encourage here, this kind of spirit of collaboration

264
00:26:40,200 --> 00:26:45,584
因为我们可以一起做Hazel，让它变得很酷，下次再见
because together, you know, we can build Hazel, and make it pretty cool, I will see you guys next time, goodbye

